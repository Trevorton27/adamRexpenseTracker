[{"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\index.js":"1","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\App.js":"2","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Localstorage.js":"4","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\InputForm.js":"5","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\SettingsModal.js":"6","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Navbar\\Navbar.js":"7","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\ExpenseList.js":"8","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Navbar\\Popup.js":"9","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Expense.js":"10"},{"size":521,"mtime":1609895727146,"results":"11","hashOfConfig":"12"},{"size":3428,"mtime":1609895727141,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1609895727147,"results":"14","hashOfConfig":"12"},{"size":1530,"mtime":1609899672976,"results":"15","hashOfConfig":"12"},{"size":4260,"mtime":1609898497092,"results":"16","hashOfConfig":"12"},{"size":2693,"mtime":1609895727146,"results":"17","hashOfConfig":"12"},{"size":422,"mtime":1609895727145,"results":"18","hashOfConfig":"12"},{"size":720,"mtime":1609897004839,"results":"19","hashOfConfig":"12"},{"size":932,"mtime":1609895727146,"results":"20","hashOfConfig":"12"},{"size":652,"mtime":1609898727934,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fo8cnr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\index.js",[],["44","45"],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\App.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Localstorage.js",["46","47"],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\InputForm.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\SettingsModal.js",["48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\r\n\r\nconst SettingsModal = ({ show, setShow, theme, setTheme, saveLocalStorage, setSaveLocalStorage }) => {\r\n    const themeValues = [\r\n        { name: \"Light Mode\", value: \"0\" },\r\n        { name: \"Dark Mode\", value: \"1\" },\r\n    ];\r\n    const storageValues = [\r\n        { name: \"Save Expenses\", value: \"0\" },\r\n        { name: \"No Save\", value: \"1\" },\r\n    ];\r\n\r\n    function themeChange(e) {\r\n        setTheme(e.currentTarget.value);\r\n    }\r\n\r\n    function storageChange(e) {\r\n        setSaveLocalStorage(e.currentTarget.value);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <Modal.Header>\r\n                <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ButtonGroup>\r\n                    {themeValues.map((themeValue, idx1) => (\r\n                        <ToggleButton\r\n                            className=\"radiobuttons\"\r\n                            variant=\"link\"\r\n                            key={idx1}\r\n                            type=\"radio\"\r\n                            name=\"radio\"\r\n                            value={themeValue.value}\r\n                            checked={theme === themeValue.value}\r\n                            onChange={themeChange}\r\n                        >\r\n                            {themeValue.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n                <div>\r\n                    <ButtonGroup>\r\n                        {storageValues.map((storageValue, idx2) => (\r\n                            <ToggleButton\r\n                                className=\"radiobuttons\"\r\n                                variant=\"link\"\r\n                                key={idx2}\r\n                                type=\"radio\"\r\n                                name=\"storage\"\r\n                                value={storageValue.value}\r\n                                checked={saveLocalStorage === storageValue.value}\r\n                                onChange={storageChange}\r\n                            >\r\n                                {storageValue.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SettingsModal;\r\n","C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\ExpenseList.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Navbar\\Popup.js",[],"C:\\Users\\spira\\Documents\\SDMM student folders\\Adam Rhode\\expense-tracker\\src\\components\\Expense.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":44,"column":6,"nodeType":"60","endLine":44,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"63","line":1,"column":27,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["66"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [props]",{"range":"69","text":"70"},[1174,1176],"[props]"]