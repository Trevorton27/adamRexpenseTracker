[{"C:\\xampp\\htdocs\\expense-tracker\\src\\index.js":"1","C:\\xampp\\htdocs\\expense-tracker\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\expense-tracker\\src\\App.js":"3","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\ExpenseList.js":"4","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Expense.js":"5","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Navbar\\Navbar.js":"6","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Navbar\\Popup.js":"7","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\InputForm.js":"8","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Link.js":"9","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Route.js":"10","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\SettingsModal.js":"11","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Localstorage.js":"12"},{"size":504,"mtime":1608406303606,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":4099,"mtime":1609308963908,"results":"16","hashOfConfig":"14"},{"size":773,"mtime":1609303044033,"results":"17","hashOfConfig":"14"},{"size":681,"mtime":1609275272623,"results":"18","hashOfConfig":"14"},{"size":422,"mtime":1609269915331,"results":"19","hashOfConfig":"14"},{"size":988,"mtime":1609290445069,"results":"20","hashOfConfig":"14"},{"size":3771,"mtime":1609306503024,"results":"21","hashOfConfig":"14"},{"size":600,"mtime":1609113809299,"results":"22","hashOfConfig":"14"},{"size":573,"mtime":1609113201666,"results":"23","hashOfConfig":"14"},{"size":2736,"mtime":1609305655505,"results":"24","hashOfConfig":"14"},{"size":396,"mtime":1609309041801,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bxlmbd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\expense-tracker\\src\\index.js",[],["54","55"],"C:\\xampp\\htdocs\\expense-tracker\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\App.js",["56","57"],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\ExpenseList.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Expense.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Navbar\\Navbar.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Navbar\\Popup.js",["58"],"import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nconst Popup = (props) => {\r\n    const showModalHandler = () => {\r\n        console.log(\"settings clicked\");\r\n        props.setShow(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dropdown>\r\n                <Dropdown.Toggle bsPrefix=\"burger\" variant=\"link\">\r\n                    <div className=\"burger\">\r\n                        <div className=\"burger-line\"></div>\r\n                        <div className=\"burger-line\"></div>\r\n                        <div className=\"burger-line\"></div>\r\n                    </div>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item className=\"drowndown-item\" onClick={showModalHandler}>\r\n                        Settings\r\n                    </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\nexport default Popup;\r\n","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\InputForm.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Link.js",[],["59","60"],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Route.js",[],"C:\\xampp\\htdocs\\expense-tracker\\src\\components\\SettingsModal.js",["61"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, ButtonGroup, ToggleButton } from \"react-bootstrap\";\r\n\r\nconst SettingsModal = ({ show, setShow, theme, setTheme, storage, setStorage }) => {\r\n    const [radioValue, setRadioValue] = useState(\"0\");\r\n\r\n    const radios = [\r\n        { name: \"Light Mode\", value: \"0\" },\r\n        { name: \"Dark Mode\", value: \"1\" },\r\n    ];\r\n    const localstorage = [\r\n        { name: \"Save Expenses\", value: \"0\" },\r\n        { name: \"No Save\", value: \"1\" },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        setTheme(!theme);\r\n    }, [radioValue]);\r\n\r\n    function themeChange(e) {\r\n        setRadioValue(e.currentTarget.value);\r\n    }\r\n\r\n    function storageChange(e) {\r\n        setStorage(e.currentTarget.value);\r\n    }\r\n\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <Modal.Header>\r\n                <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ButtonGroup>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            className=\"radiobuttons\"\r\n                            variant=\"link\"\r\n                            key={idx}\r\n                            type=\"radio\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={themeChange}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n                <div>\r\n                    <ButtonGroup>\r\n                        {localstorage.map((store, idx) => (\r\n                            <ToggleButton\r\n                                className=\"radiobuttons\"\r\n                                variant=\"link\"\r\n                                key={idx}\r\n                                type=\"radio\"\r\n                                name=\"storage\"\r\n                                value={store.value}\r\n                                checked={storage === store.value}\r\n                                onChange={storageChange}\r\n                            >\r\n                                {store.name}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SettingsModal;\r\n","C:\\xampp\\htdocs\\expense-tracker\\src\\components\\Localstorage.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":22,"column":9,"nodeType":"69","messageId":"70","endLine":22,"endColumn":28},{"ruleId":"67","severity":1,"message":"71","line":60,"column":11,"nodeType":"69","messageId":"70","endLine":60,"endColumn":22},{"ruleId":"67","severity":1,"message":"72","line":1,"column":17,"nodeType":"69","messageId":"70","endLine":1,"endColumn":25},{"ruleId":"63","replacedBy":"73"},{"ruleId":"65","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":18,"column":8,"nodeType":"77","endLine":18,"endColumn":20,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'independentExpenses' is defined but never used.","Identifier","unusedVar","'getExpenses' is assigned a value but never used.","'useState' is defined but never used.",["80"],["81"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTheme' and 'theme'. Either include them or remove the dependency array. If 'setTheme' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [radioValue, setTheme, theme]",{"range":"85","text":"86"},[580,592],"[radioValue, setTheme, theme]"]